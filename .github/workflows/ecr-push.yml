name: Build and Push Docker images to ECR

on:
  push:
    branches:
      - main
      - development

jobs:
  build-rest-api-gateway:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

      - name: Build and push Docker image for rest-api-gateway
        run: |
          IMAGE_TAG=${{ secrets.ECR_REPOSITORY }}:rest-api-gateway-dev
          docker build -t $IMAGE_TAG -f apps/rest-api-gateway/Dockerfile .
          docker push $IMAGE_TAG

      - name: Logout from ECR
        run: docker logout ${{ secrets.ECR_REPOSITORY }}

#      - name: Update ECS service with new image
#        run: |
#          CLUSTER_NAME=${{ secrets.ECS_CLUSTER_NAME }}
#          SERVICE_NAME=${{ secrets.ECS_SERVICE_NAME }}
#          CONTAINER_NAME="rest-api-gateway"
#          NEW_IMAGE="${{ secrets.ECR_REPOSITORY }}:rest-api-gateway-dev"
#
#          # Get the current task definition
#          TASK_DEFINITION_ARN=$(aws ecs describe-services --cluster $CLUSTER_NAME --services $SERVICE_NAME --query 'services[0].taskDefinition' --output text)
#
#          # Get the task definition family
#          TASK_FAMILY=$(aws ecs describe-task-definition --task-definition $TASK_DEFINITION_ARN --query 'taskDefinition.family' --output text)
#
#          # Get the container definitions and replace the image
#          CONTAINER_DEFINITIONS=$(aws ecs describe-task-definition --task-definition $TASK_DEFINITION_ARN --query 'taskDefinition.containerDefinitions' --output json | jq --arg IMAGE "$NEW_IMAGE" '.[0].image = $IMAGE | [.]')
#
#          # Register a new task definition
#          NEW_TASK_DEFINITION=$(aws ecs register-task-definition \
#            --family $TASK_FAMILY \
#            --container-definitions "$CONTAINER_DEFINITIONS" \
#            --query 'taskDefinition.taskDefinitionArn' --output text)
#
#          # Update the service with the new task definition
#          aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --task-definition $NEW_TASK_DEFINITION
